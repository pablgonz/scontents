%%
%% This is file `t-scontents.mkvi',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% scontents.dtx  (with options: `loader,context')
%% 
%% Copyright (C) 2019 by Pablo Gonz치lez L <pablgonz@educarchile.cl>
%% 
%% This work may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License, either version 1.3c of this license or (at
%% your option) any later version. The latest version of this license is in
%% 
%%  http://www.latex-project.org/lppl.txt
%% 
%% and version 1.3c or later is part of all distributions of LaTeX version
%% 2005/12/01 or later.
%% 
%% This work is "maintained" (as per the LPPL maintenance status)
%% by Pablo Gonz치lez Luengo.
%% 
%% This work consists of the files scontents.dtx and
%%                                 scontents.ins,
%% and the derived files           scontents.sty,
%%                                 scontents.tex,
%%                                 t-scontents.mkvi and
%%                                 scontents-code.tex.
%% 
%%
%% The original source files were:
%%
%% scontents.dtx  (with options: `loader,context')
%D  \module
%D    [     file=t-scontents,
%D       version=1.5,
%D         title=\CONTEXT\ User Module,
%D      subtitle=Storing Contents,
%D        author=Pablo Gonz치lez,
%D          date=2019.10.16,
%D     copyright=Pablo Gonz치lez,
%D         email=pablgonz@educarchile.cl,
%D       license=LPPL]
\def\ScontentsFileDate{2019-10-16}%
\def\ScontentsFileVersion{1.5}%
\def\ScontentsFileDescription{Stores LaTeX contents in memory or files}%
\writestatus{loading}{User Module scontents v\ScontentsFileVersion}
\unprotect
\input expl3-generic.tex
\ExplSyntaxOn
\tl_gset:cx { ver @ scontents . sty } { \ScontentsFileDate\space
  v\ScontentsFileVersion\space \ScontentsFileDescription }
\iow_log:x { Package: ~ scontents ~ \use:c { ver @ scontents . sty } }
\msg_gset:nnn { scontents } { already-loaded }
  { The~`scontents'~package~is~already~loaded.~Aborting~input~\msg_line_context:. }
\cs_if_exist:NT \__scontents_rescan_tokens:n
  {
    \msg_warning:nnn { scontents } { already-loaded }
    \file_input_stop:
  }
\tl_new:N \g__scontents_end_verbatimsc_tl
\tl_gset_rescan:Nnn
  \g__scontents_end_verbatimsc_tl
  {
    \char_set_catcode_other:N \\
  }
  { \stopverbatimsc }
\tl_const:Nx \c__scontents_end_env_tl
  {
    \c_backslash_str
    stop
      scontents
  }
\file_input:n { scontents-code.tex }
\cs_new:Npn \__scontents_format_case:nnn #1 #2 #3
  {#3} % ConTeXt
\keys_define:nn { scontents }
  { verb-font .initial:n = \tt }
\cs_new_protected:Npn \startscontents
  {
    \group_begin:
    \__scontents_scontents_env_begin:
  }
\cs_new_protected:Npn \stopscontents
  {
    \__scontents_scontents_env_end:
    \group_end:
  }
\cs_new_protected:Npn \__scontents_grab_optional:w [#1]
  { \__scontents_grab_optional:n {#1} }
\tl_new:N \l__scontents_v_arg_tl
\bool_new:N \l__scontents_long_bool
\cs_new_protected:Npn \__scontents_grab_v:Nw
  {
    \bool_set_false:N \l__scontents_long_bool
    \__scontents_grab_v_aux:w
  }
\cs_new_protected:Npn \__scontents_grab_v_long:Nw
  {
    \bool_set_true:N \l__scontents_long_bool
    \__scontents_grab_v_aux:w
  }
\cs_new_protected:Npn \__scontents_grab_v_aux:w #1
  {
    \cs_set_eq:NN \__scontents_run_code:n #1
    \group_begin:
      \group_align_safe_begin:
        \int_set:Nn \tex_escapechar:D { 92 }
        \tl_clear:N \l__scontents_v_arg_tl
        \peek_remove_spaces:n
          {
            \peek_meaning_remove:NTF \c_group_begin_token
              {
                \group_align_safe_end:
                \__scontents_grab_v_bgroup:
              }
              {
                \peek_N_type:TF
                  { \__scontents_grab_v_aux_test:N }
                  { \__scontents_grab_v_aux_abort:n { } }
              }
          }
  }
\cs_new_protected:Npn \__scontents_grab_v_group_end:
  {
        \group_align_safe_end:
        \exp_args:NNNo
      \group_end:
    \tl_set:Nn \l__scontents_v_arg_tl { \l__scontents_v_arg_tl }
  }
\cs_new_protected:Npn \__scontents_grab_v_aux_test:N #1
  {
    \__scontents_grab_v_token_if_char:NTF #1
      {
        \__scontents_grab_v_aux_put:N #1
        \__scontents_grab_v_aux_catcodes:
        \__scontents_grab_v_aux_loop:N #1
      }
      { \__scontents_grab_v_aux_abort:n {#1} #1 }
  }
\cs_new_protected:Npn \__scontents_grab_v_aux_loop:N #1
  {
    \peek_N_type:TF
      { \__scontents_grab_v_aux_loop:NN #1 }
      { \__scontents_grab_v_aux_abort:n { } }
  }
\cs_new_protected:Npn \__scontents_grab_v_aux_loop:NN #1#2
  {
    \__scontents_grab_v_token_if_char:NTF #2
      {
        \token_if_eq_charcode:NNTF #1 #2
          { \__scontents_grab_v_aux_loop_end: }
          {
            \__scontents_grab_v_aux_put:N #2
            \__scontents_grab_v_aux_loop:N #1
          }
      }
      { \__scontents_grab_v_aux_abort:n {#2} #2 }
  }
\cs_new_protected:Npn \__scontents_grab_v_aux_loop_end:
  {
    \__scontents_grab_v_group_end:
    \exp_args:Nx \__scontents_run_code:n { \tl_tail:N \l__scontents_v_arg_tl }
  }
\int_new:N \l__scontents_v_nesting_int
\cs_new_protected:Npx \__scontents_grab_v_bgroup:
  {
    \exp_not:N \__scontents_grab_v_aux_catcodes:
    \exp_not:n { \int_set:Nn \l__scontents_v_nesting_int { 1 } }
    \exp_not:N \__scontents_grab_v_aux_put:N \iow_char:N \{
    \exp_not:N \__scontents_grab_v_bgroup_loop:
  }
\cs_new_protected:Npn \__scontents_grab_v_bgroup_loop:
  {
    \peek_N_type:TF
      { \__scontents_grab_v_bgroup_loop:N }
      { \__scontents_grab_v_aux_abort:n { } }
  }
\cs_new_protected:Npn \__scontents_grab_v_bgroup_loop:N #1
  {
    \__scontents_grab_v_token_if_char:NTF #1
      {
        \token_if_eq_charcode:NNTF \c_group_end_token #1
          {
            \int_decr:N \l__scontents_v_nesting_int
            \int_compare:nNnTF \l__scontents_v_nesting_int > 0
              {
                \__scontents_grab_v_aux_put:N #1
                \__scontents_grab_v_bgroup_loop:
              }
              { \__scontents_grab_v_aux_loop_end: }
          }
          {
            \token_if_eq_charcode:NNT \c_group_begin_token #1
              { \int_incr:N \l__scontents_v_nesting_int }
            \__scontents_grab_v_aux_put:N #1
            \__scontents_grab_v_bgroup_loop:
          }
      }
      { \__scontents_grab_v_aux_abort:n {#1} #1 }
  }
\cs_new_protected:Npn \__scontents_grab_v_aux_catcodes:
  {
    \cs_set_eq:NN \do \char_set_catcode_other:N
    \__scontents_dospecials:
    \tex_endlinechar:D = `\^^M \scan_stop:
    \bool_if:NTF \l__scontents_long_bool
      { \char_set_catcode_other:n { \tex_endlinechar:D } }
      { \char_set_catcode_parameter:n { \tex_endlinechar:D } }
  }
\cs_new_protected:Npn \__scontents_grab_v_aux_abort:n #1
  {
    \__scontents_grab_v_group_end:
    \exp_after:wN \exp_after:wN \exp_after:wN
      \peek_meaning_remove:NTF \char_generate:nn { \tex_endlinechar:D } { 6 }
      {
        \msg_error:nnxxx { xparse } { verbatim-newline }
          { \__scontents_environment_or_command: }
          { \tl_to_str:N \l__scontents_v_arg_tl }
          { \tl_to_str:n {#1} }
        \__scontents_add_arg:o \c_novalue_tl
      }
      {
        \msg_error:nnxxx { xparse } { verbatim-tokenized }
          { \__scontents_environment_or_command: }
          { \tl_to_str:N \l__scontents_v_arg_tl }
          { \tl_to_str:n {#1} }
        \__scontents_add_arg:o \c_novalue_tl
      }
  }
\cs_new_protected:Npn \__scontents_grab_v_aux_put:N #1
  {
    \tl_put_right:Nx \l__scontents_v_arg_tl
      {
        \token_if_active:NTF #1
          { \exp_not:N #1 } { \token_to_str:N #1 }
      }
  }
\cs_new_protected:Npn \__scontents_grab_v_token_if_char:NTF #1
  { \str_if_eq:eeTF { } { \str_tail:n {#1} } }
\cs_new_protected:Npn \Scontents
  {
    \peek_charcode_remove:NTF *
      { \__scontents_Scontents_auxi:N \c_true_bool }
      { \__scontents_Scontents_auxi:N \c_false_bool }
  }
\cs_new_protected:Npx \__scontents_Scontents_auxi:N #1
  {
    \peek_charcode:NTF [ % ]
      { \use:c { Scontents~code } \c_true_bool }
      { \use:c { Scontents~code } \c_true_bool [ \c_novalue_tl ] }
  }
\cs_new_protected:cpn { Scontents~code } #1 [#2]
  { \__scontents_Scontents_internal:nn {#1} {#2} }
\cs_new_protected:Npn \__scontents_verb_arg:w
  { \__scontents_grab_v_long:Nw \__scontents_verb_arg_internal:n }
\cs_new_protected:Npn \getstored
  {
    \peek_charcode_ignore_spaces:NTF [ % ]
      { \use:c { getstored~code } }
      { \use:c { getstored~code } [ 1 ] }
  }
\cs_new_protected:cpn { getstored~code } [#1] #2
  { \__scontents_getstored_internal:nn {#1} {#2} }
\cs_new_protected:Npx \foreachsc
  {
    \peek_charcode_ignore_spaces:NTF [ % ]
      { \use:c { foreachsc~code } }
      { \use:c { foreachsc~code } [ \c_novalue_tl ] }
  }
\cs_new_protected:cpn { foreachsc~code } [#1] #2
  { \__scontents_foreachsc_internal:nn {#1} {#2} }
\cs_new_protected:Npx \typestored
  {
    \peek_charcode_ignore_spaces:NTF [ % ]
      { \use:c { typestored~code } }
      { \use:c { typestored~code } [ \c_novalue_tl ] }
  }
\cs_new_protected:cpn { typestored~code } [#1] #2
  { \__scontents_typestored_internal:nn {#1} {#2} }
\use:x
  {
    \cs_new_protected:Npn \exp_not:N \__scontents_xverb:w
      ##1 \g__scontents_end_verbatimsc_tl
      { ##1 \exp_not:N \stopverbatimsc }
  }
\definetyping[verbatimsc]
\group_begin:
  \cs_new_protected:Npn \__scontents_plain_disable_outer_par:
    { }
\group_end:
\cs_new_protected:Npn \setupsc #1
  { \keys_set:nn { scontents } {#1} }
\cs_new_protected:Npx \meaningsc
  {
    \peek_charcode_ignore_spaces:NTF [ % ]
      { \use:c { meaningsc~code } }
      { \use:c { meaningsc~code } [ \c_novalue_tl ] }
  }
\cs_new_protected:cpn { meaningsc~code } [#1] #2
  { \__scontents_meaningsc_internal:nn {#1} {#2} }
\cs_new:Npn \countsc #1
  { \seq_count:c { g__scontents_name_#1_seq } }
\cs_new_protected:Npn \cleanseqsc #1
  { \seq_clear_new:c { g__scontents_name_#1_seq } }
\ExplSyntaxOff
\endinput
%%
%% End of file `t-scontents.mkvi'.
